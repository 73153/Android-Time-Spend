package com.eosos.components.main;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;

import android.location.Location;
import android.text.Html;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.ProgressBar;

import com.androidquery.AQuery;
import com.androidquery.callback.BitmapAjaxCallback;
import com.eosos.common.classes.ViewHolder;
import com.eosos.customviews.IjoomerTextView;
import com.eosos.src.R;
import com.smart.framework.ItemView;
import com.smart.framework.SmartActivity;
import com.smart.framework.SmartFragment;
import com.smart.framework.SmartListAdapterWithHolder;
import com.smart.framework.SmartListItem;

public class EososEntryListFragment extends SmartFragment implements EososTagHolder {

	private ListView listDirectory;

	private ArrayList<SmartListItem> listData = new ArrayList<SmartListItem>();
	private SmartListAdapterWithHolder listAdapterWithHolder;

	ArrayList<HashMap<String, String>> data;
	private String latitude, longitude;

	private AQuery aQuery;

	public EososEntryListFragment(ArrayList<HashMap<String, String>> data) {
		this.data = data;
	}

	@Override
	public int setLayoutId() {
		return R.layout.eosos_entry_fragment;
	}

	@Override
	public void initComponents(View currentView) {
		listDirectory = (ListView) currentView.findViewById(R.id.directoryList);
        listDirectory.setSelector(R.drawable.list_item_selector);
		aQuery = new AQuery(getActivity());
		((ImageView) ((SmartActivity) getActivity()).getHeaderView().findViewById(R.id.imgDirection)).setVisibility(View.GONE);
	}

	@Override
	public void prepareViews(View currentView) {
		prepareList(data, false, true, 0, 10);
		listAdapterWithHolder = getListAdapter(listData);
		listDirectory.setAdapter(listAdapterWithHolder);

		latitude = ((SmartActivity) getActivity()).getLatitude();
		longitude = ((SmartActivity) getActivity()).getLongitude();
	}

	@Override
	public void setActionListeners(View currentView) {
		listDirectory.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
				try {
					((SmartActivity) getActivity()).loadNew(EososEntryDetailActivityNew.class, getActivity(), false, "IN_ID", data.get(arg2).get("id"));
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});

	}

	public void prepareList(ArrayList<HashMap<String, String>> data, boolean append, boolean fromCache, int pageno, int pagelimit) {
		if (data != null) {
			if (!append) {
				listData.clear();
			} else {
				if (!fromCache) {
					int startIndex = ((pageno - 1) * pagelimit);
					int endIndex = listAdapterWithHolder.getCount();
					if (startIndex > 0) {
						for (int i = endIndex; i >= startIndex; i--) {
							try {
								listAdapterWithHolder.remove(listAdapterWithHolder.getItem(i));
								listData.remove(i);
							} catch (Exception e) {
							}
						}
					}
				}
			}

			for (HashMap<String, String> hashMap : data) {
				JSONArray jsonArray = null;
				try {
					jsonArray = new JSONArray(hashMap.get("field"));
					for (int j = 0; j < jsonArray.length(); j++) {
						if (jsonArray.getJSONObject(j).get("labelid").toString().equalsIgnoreCase("field_image1")) {
							hashMap.put("image1", jsonArray.getJSONObject(j).get("value").toString());
						}
						if (jsonArray.getJSONObject(j).get("labelid").toString().equalsIgnoreCase("field_city")) {
							hashMap.put("city", jsonArray.getJSONObject(j).get("value").toString());
						}
					}
				} catch (Exception e) {

				}
				SmartListItem item = new SmartListItem();
				item.setItemLayout(R.layout.eosos_entry_list_item);
				ArrayList<Object> obj = new ArrayList<Object>();
				obj.add(hashMap);
				item.setValues(obj);
				if (append) {
					listAdapterWithHolder.add(item);
				} else {
					listData.add(item);
				}
			}

		}
	}

	public SmartListAdapterWithHolder getListAdapter(ArrayList<SmartListItem> listData) {

		SmartListAdapterWithHolder adapterWithHolder = new SmartListAdapterWithHolder(getActivity(), R.layout.eosos_entry_list_item, listData, new ItemView() {

			@Override
			public View setItemView(int position, View v, SmartListItem item, final ViewHolder holder) {

				holder.eososTxtTitle = (IjoomerTextView) v.findViewById(R.id.eososTxtTitle);
				holder.eososTxtLocation = (IjoomerTextView) v.findViewById(R.id.eososTxtLocation);
				holder.eososTxtDistance = (IjoomerTextView) v.findViewById(R.id.eososTxtDistance);
				holder.eososImgClub = (ImageView) v.findViewById(R.id.eososImgClub);
				holder.eososProgress = (ProgressBar) v.findViewById(R.id.progress);

				@SuppressWarnings("unchecked")
				HashMap<String, String> value = (HashMap<String, String>) item.getValues().get(0);

				holder.eososTxtLocation.setText(Html.fromHtml(value.get("city")).toString().trim());
				holder.eososTxtTitle.setText(value.get("title").trim());

				double distance;
				String distanceData = null;
				try {
					distance = getDistance(Double.parseDouble(latitude), Double.parseDouble(longitude), Double.parseDouble(value.get("latitude")),
							Double.parseDouble(value.get("longitude")));

					distanceData = String.format("%.1f", distance);
					holder.eososTxtDistance.setText(distanceData + " miles");
				} catch (Exception e) {
					e.printStackTrace();
				}
				try {
                    if(aQuery.getCachedImage(value.get("image1"))==null){
                        holder.eososProgress.setVisibility(View.VISIBLE);
                        aQuery.id(holder.eososImgClub).image(value.get("image1"), true, true, 0, 0, new BitmapAjaxCallback() {

                            protected void callback(String url, ImageView iv, android.graphics.Bitmap bm, com.androidquery.callback.AjaxStatus status) {
                                iv.setImageBitmap(bm);
                                holder.eososProgress.setVisibility(View.GONE);
                            }

                            ;

                        });
                    }else{
                        holder.eososProgress.setVisibility(View.GONE);
                        holder.eososImgClub.setImageBitmap(aQuery.getCachedImage(value.get("image1")));
                    }
				} catch (Exception e) {
					e.printStackTrace();
				}
				return v;
			}

			@Override
			public View setItemView(int position, View v, SmartListItem item) {
				return null;
			}
		});
		return adapterWithHolder;
	}

	@Override
	public View setLayoutView() {
		return null;
	}

	private double getDistance(double fromLat, double fromLng, double toLat, double toLng) {
		try {
			float[] dist = new float[1];
			Location.distanceBetween(fromLat, fromLng, toLat, toLng, dist);
			return (dist[0] * 0.00062137119); // / 100000;
		} catch (Exception e) {
			e.printStackTrace();
			return 0;
		}
	}


}
