package com.eosos.components.main;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONObject;

import android.location.Location;
import android.text.Html;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.ProgressBar;

import com.androidquery.AQuery;
import com.androidquery.callback.BitmapAjaxCallback;
import com.eosos.common.classes.IjoomerUtilities;
import com.eosos.common.classes.ViewHolder;
import com.eosos.custom.interfaces.IjoomerSharedPreferences;
import com.eosos.customviews.IjoomerRatingBar;
import com.eosos.customviews.IjoomerTextView;
import com.eosos.library.EososDataProvider;
import com.eosos.src.R;
import com.smart.framework.CustomAlertNeutral;
import com.smart.framework.ItemView;
import com.smart.framework.SmartActivity;
import com.smart.framework.SmartFragment;
import com.smart.framework.SmartListAdapterWithHolder;
import com.smart.framework.SmartListItem;

public class EososSearchResultListFragment extends SmartFragment implements EososTagHolder, IjoomerSharedPreferences {

	private ListView lstClubs;

	private ArrayList<SmartListItem> listData = new ArrayList<SmartListItem>();
	public ArrayList<HashMap<String, String>> clubs = new ArrayList<HashMap<String, String>>();
	private SmartListAdapterWithHolder listAdapterWithHolder;
	private EososDataProvider dataProvider;
	private String IN_SECTION_ID = "54";
	private View listFooter;
	public boolean DistanceInKms = false;
	ArrayList<HashMap<String, String>> data;
	private String latitude, longitude;
	private AQuery aQuery;
	private ArrayList<HashMap<String, String>> IN_FIELD;

	public EososSearchResultListFragment() {
	}

	@Override
	public int setLayoutId() {
		return R.layout.eosos_search_entry_fragment;
	}

	@Override
	public void initComponents(View currentView) {
		lstClubs = (ListView) currentView.findViewById(R.id.directoryList);
        lstClubs.setSelector(R.drawable.list_item_selector);
		aQuery = new AQuery(getActivity());
		listFooter = LayoutInflater.from(getActivity()).inflate(R.layout.ijoomer_list_footer, null);
		lstClubs.addFooterView(listFooter, null, false);
		dataProvider = new EososDataProvider(getActivity());
		lstClubs.setFastScrollEnabled(true);
		((ImageView) ((SmartActivity) getActivity()).getHeaderView().findViewById(R.id.imgDirection)).setVisibility(View.GONE);
	}

	@Override
	public void prepareViews(View currentView) {
		getIntentData();
		latitude = ((SmartActivity) getActivity()).getLatitude();
		longitude = ((SmartActivity) getActivity()).getLongitude();
		if (IN_FIELD != null) {
			getSearchResultFromCache();
		} else {
			lstClubs.setVisibility(View.GONE);
		}

	}

	public void getSearchResultFromCache() {
//		final SeekBar proSeekBar = IjoomerUtilities.getLoadingDialog(getString(R.string.dialog_loading_sending_request));
//		try {
//			dataProvider.getPlannerList(IN_FIELD.get(1).get("value").toString(), IN_FIELD.get(0).get("name").toString(), new WebCallListenerWithCacheInfo() {
//
//				@Override
//				public void onProgressUpdate(int progressCount) {
//					proSeekBar.setProgress(progressCount);
//				}
//
//				@Override
//				public void onCallComplete(int responseCode, String errorMessage, ArrayList<HashMap<String, String>> data1, Object data2, int pageNo, int pageLimit,
//						boolean fromCache) {
//					if (data1 != null) {
//						data = data1;
//						lstClubs.setFastScrollEnabled(true);
//						prepareList(data, false, true, 1, 10);
//						listAdapterWithHolder = getListAdapter(listData);
//						lstClubs.setAdapter(listAdapterWithHolder);
//					}
//					getSearchResult();
//				}
//			});
//
//		} catch (Exception e) {
//
//			getSearchResult();
//		}
        data = dataProvider.getPlannerList(IN_FIELD.get(1).get("value"), IN_FIELD.get(0).get("name"));
        if(data!=null && data.size()>0){
            lstClubs.setFastScrollEnabled(true);
			prepareList(data, false, true, 1, 10);
			listAdapterWithHolder = getListAdapter(listData);
			lstClubs.setAdapter(listAdapterWithHolder);
        }else{
            IjoomerUtilities.getCustomOkDialog(getString(R.string.favourites), getString(R.string.code204), getString(R.string.ok), R.layout.ijoomer_ok_dialog,
                    new CustomAlertNeutral() {

                        @Override
                        public void NeutralMethod() {

                        }
                    });
        }
	}

//	public void getSearchResult() {
//		dataProvider.getSearchResult("", "", IN_SECTION_ID, IN_FIELD, "", new WebCallListener() {
//
//			@Override
//			public void onProgressUpdate(int progressCount) {
//			}
//
//			@Override
//			public void onCallComplete(int responseCode, String errorMessage, ArrayList<HashMap<String, String>> data1, Object data2) {
//				try {
//					if (data1 != null) {
//						data = data1;
//						lstClubs.setFastScrollEnabled(true);
//						prepareList(data, false, false, 1, 10);
//						listAdapterWithHolder = getListAdapter(listData);
//						lstClubs.setAdapter(listAdapterWithHolder);
//					} else {
//						lstClubs.setVisibility(View.GONE);
//						try {
//							IjoomerUtilities.getCustomOkDialog(getString(R.string.planner),
//									getString(getResources().getIdentifier("code" + responseCode, "string", getActivity().getPackageName())), getString(R.string.ok),
//									R.layout.ijoomer_ok_dialog, new CustomAlertNeutral() {
//
//										@Override
//										public void NeutralMethod() {
//
//										}
//									});
//						} catch (Exception e) {
//							e.printStackTrace();
//						}
//					}
//				} catch (Exception e) {
//					e.printStackTrace();
//				}
//
//			}
//		});
//	}

	/**
	 * This method used to visible list footer
	 */
	public void listFooterVisible() {
		listFooter.setVisibility(View.VISIBLE);
	}

	/**
	 * This method used to gone list footer
	 */
	public void listFooterInvisible() {
		listFooter.setVisibility(View.GONE);
	}

	@Override
	public void setActionListeners(View currentView) {
		lstClubs.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
				try {
					((SmartActivity) getActivity()).loadNew(EososEntryDetailActivityNew.class, getActivity(), false, "IN_ID", data.get(arg2).get("id"));
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});

//		lstClubs.setOnScrollListener(new OnScrollListener() {
//
//			@Override
//			public void onScrollStateChanged(AbsListView view, int scrollState) {
//			}
//
//			@Override
//			public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
//
//				if ((firstVisibleItem + visibleItemCount) >= totalItemCount && totalItemCount > 0) {
//
//					if (!dataProvider.isCalling() && dataProvider.hasNextPage()) {
//						listFooterVisible();
//
//						dataProvider.getSearchResult("", "", IN_SECTION_ID, IN_FIELD, "", new WebCallListener() {
//
//							@Override
//							public void onProgressUpdate(int progressCount) {
//							}
//
//							@Override
//							public void onCallComplete(int responseCode, String errorMessage, ArrayList<HashMap<String, String>> data1, Object data2) {
//
//								listFooterInvisible();
//								if (responseCode == 200) {
//									if (data1 != null && data1.size() > 0) {
//										prepareList(data1, true, false, 1, 10);
//									}
//								}
//
//							}
//
//						});
//
//					}
//				}
//
//			}
//		});
	}

	public ArrayList<HashMap<String, String>> getClubs() {
		return clubs;
	}

	public void getIntentData() {
		if (((SmartActivity) getActivity()).getSmartApplication().readSharedPreferences().getString(SP_DEFAULT_LANDING_SCREEN, "").length() > 0) {
			try {
				JSONObject intentData = new JSONObject(((SmartActivity) getActivity()).getSmartApplication().readSharedPreferences().getString(SP_LAST_ACTIVITY_INTENT, ""))
						.getJSONObject("itemdata");
				IN_SECTION_ID = intentData.getString("sectionID");
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		IN_FIELD = (ArrayList<HashMap<String, String>>) getActivity().getIntent().getSerializableExtra("IN_FIELD");

	}

	public void prepareList(ArrayList<HashMap<String, String>> data, boolean append, boolean fromCache, int pageno, int pagelimit) {
		if (data != null) {
			if (!append) {
				listData.clear();
				clubs.clear();
			} else {
				if (!fromCache) {
					int startIndex = ((pageno - 1) * pagelimit);
					int endIndex = listAdapterWithHolder.getCount();
					if (startIndex > 0) {
						for (int i = endIndex; i >= startIndex; i--) {
							try {
								listAdapterWithHolder.remove(listAdapterWithHolder.getItem(i));
								listData.remove(i);
								clubs.remove(i);
							} catch (Exception e) {
							}
						}
					}
				}
			}

			for (int i = 0; i < data.size(); i++) {
				HashMap<String, String> hashMap = data.get(i);
				JSONArray jsonArray = null;
				try {
					jsonArray = new JSONArray(hashMap.get("field"));
					for (int j = 0; j < jsonArray.length(); j++) {
						if (jsonArray.getJSONObject(j).get("labelid").toString().equalsIgnoreCase("field_image1")) {
							hashMap.put("image1", jsonArray.getJSONObject(j).get("value").toString());
						}
						if (jsonArray.getJSONObject(j).get("labelid").toString().equalsIgnoreCase("field_city")) {
							hashMap.put("city", jsonArray.getJSONObject(j).get("value").toString());
						}
					}
				} catch (Exception e) {

				}
				SmartListItem item = new SmartListItem();
				item.setItemLayout(R.layout.eosos_search_list_item);
				ArrayList<Object> obj = new ArrayList<Object>();
				obj.add(hashMap);
				item.setValues(obj);
				clubs.add(hashMap);
				if (append) {
					listAdapterWithHolder.add(item);
				} else {
					listData.add(item);

				}
			}
		}
	}



	public SmartListAdapterWithHolder getListAdapter(final ArrayList<SmartListItem> listData) {

        SmartListAdapterWithHolder adapterWithHolder = new SmartListAdapterWithHolder(getActivity(), R.layout.eosos_search_list_item, listData,
				 new ItemView() {

					@Override
					public View setItemView(int position, View v, SmartListItem item, final ViewHolder holder) {

						holder.eososTxtTitle = (IjoomerTextView) v.findViewById(R.id.eososTxtTitle);
						holder.eososTxtLocation = (IjoomerTextView) v.findViewById(R.id.eososTxtLocation);
						holder.eososTxtDistance = (IjoomerTextView) v.findViewById(R.id.eososTxtDistance);
						holder.eososImgClub = (ImageView) v.findViewById(R.id.eososImgClub);
						holder.eososTxtCity = (IjoomerTextView) v.findViewById(R.id.eososTxtCity);
                        holder.rtbRating = (IjoomerRatingBar) v.findViewById(R.id.rtbRating);
						holder.eososProgress = (ProgressBar) v.findViewById(R.id.progress);
                        holder.divider = (View) v.findViewById(R.id.divider);
                        holder.rtbRating.setVisibility(View.GONE);
                        holder.eososTxtDistance.setVisibility(View.GONE);
						holder.eososTxtCity.setVisibility(View.GONE);
						@SuppressWarnings("unchecked")
						HashMap<String, String> value = (HashMap<String, String>) item.getValues().get(0);

						holder.eososTxtLocation.setText(Html.fromHtml(value.get("city")).toString().trim());
						holder.eososTxtTitle.setText(value.get("title").trim());

                        try {
                            holder.rtbRating.setStarRating(Float.parseFloat(value.get(AVERAGERATING)) / 2);
                            holder.rtbRating.setVisibility(View.VISIBLE);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
						try {
                            if(aQuery.getCachedImage(value.get("image1"))==null){
                                holder.eososProgress.setVisibility(View.VISIBLE);
                                aQuery.id(holder.eososImgClub).image(value.get("image1"), true, true, 0, 0, new BitmapAjaxCallback() {

                                    protected void callback(String url, ImageView iv, android.graphics.Bitmap bm, com.androidquery.callback.AjaxStatus status) {
                                        iv.setImageBitmap(bm);
                                        holder.eososProgress.setVisibility(View.GONE);
                                    }

                                    ;

                                });
                            }else{
                                holder.eososProgress.setVisibility(View.GONE);
                                holder.eososImgClub.setImageBitmap(aQuery.getCachedImage(value.get("image1")));
                            }
						} catch (Exception e) {
							e.printStackTrace();
						}
						return v;
					}

					@Override
					public View setItemView(int position, View v, SmartListItem item) {
						return null;
					}
				});
		return adapterWithHolder;
	}

	@Override
	public View setLayoutView() {
		return null;
	}

	public void changeDistanceUnit(boolean InKms) {
		DistanceInKms = InKms;
		listAdapterWithHolder.notifyDataSetChanged();
	}

	private double getDistance(double fromLat, double fromLng, double toLat, double toLng) {
		try {
			float[] dist = new float[1];
			Location.distanceBetween(fromLat, fromLng, toLat, toLng, dist);
			if (DistanceInKms)
				return (dist[0] * 0.001);
			else
				return (dist[0] * 0.00062137119); // / 100000;
		} catch (Exception e) {
			e.printStackTrace();
			return 0;
		}
	}

}
